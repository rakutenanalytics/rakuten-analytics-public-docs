"use strict";(self.webpackChunkanalytics_sdk_extensions=self.webpackChunkanalytics_sdk_extensions||[]).push([[522],{5474:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"sdks/analytics-sdks/android/advanced-usage/android-analytics-custom-tracker","title":"Creating a Custom Tracker","description":"Creating a Custom Tracker","source":"@site/docs/sdks/analytics-sdks/android/advanced-usage/custom-tracker.md","sourceDirName":"sdks/analytics-sdks/android/advanced-usage","slug":"/analytics-sdk/android/android-custom-tracker","permalink":"/rakuten-analytics-public-docs/docs/analytics-sdk/android/android-custom-tracker","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"android-analytics-custom-tracker","slug":"/analytics-sdk/android/android-custom-tracker","title":"Creating a Custom Tracker","added_version":"4.1.0","updated_version":"4.1.0","changelog":"./android-changelog"},"sidebar":"docSidebar","previous":{"title":"Advanced Usage","permalink":"/rakuten-analytics-public-docs/docs/category/advanced-usage-2"},"next":{"title":"Scheduling Strategy","permalink":"/rakuten-analytics-public-docs/docs/analytics-sdk/android/android-scheduling-strategy"}}');var r=n(4848),s=n(8453);const c={sidebar_position:1,id:"android-analytics-custom-tracker",slug:"/analytics-sdk/android/android-custom-tracker",title:"Creating a Custom Tracker",added_version:"4.1.0",updated_version:"4.1.0",changelog:"./android-changelog"},i=void 0,d={},o=[{value:"Creating a Custom Tracker",id:"creating-a-custom-tracker",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"creating-a-custom-tracker",children:"Creating a Custom Tracker"}),"\n",(0,r.jsxs)(a.p,{children:["To add a custom tracker you need to implement the ",(0,r.jsx)(a.code,{children:"Tracker"})," interface. ",(0,r.jsx)(a.code,{children:"Tracker#process(Event , MetaData)"})," is called for every events, with the ",(0,r.jsx)(a.code,{children:"Event"})," object containing the event name and parameters and an ",(0,r.jsx)(a.code,{children:"MetaData"})," object containing attributes automatically generated by the SDK."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'class LoggingTracker implements Tracker {\n  final static String TAG = LoggingTracker.class.getSimpleName();\n\n  @Override public boolean process(@NonNull Event event, @NonNull MetaData metaData) {\n    StringBuilder sb = new StringBuilder();\n    sb.append("{");\n    for(String key: event.parameters.keySet()) {\n      sb.append("\\n\\t").append(key).append(" -> ").append(event.parameters.get(key));\n    }\n    sb.append("\\n}");\n    log("Event = [%s, %s]", event.name, sb.toString());\n    log("EventState = [id = %s, adId = %s, sessionId = %s]",\n        metaData.userId, metaData.advertisingId, metaData.sessionId);\n  }\n\n  private void log(String format, Objects... args) {\n    Log.d(TAG, String.format(format, args));\n  }\n}\n\n// Add custom tracker to AnalyticsManager\nAnalyticsManager.getInstance().add(new LoggingTracker());\n\n// Tracking events is now be processed by all trackers - including the LaggingTracker\nMap<String, Object> params = new HashMap<>();\nparams.put("foo", "bar");\nnew AnalyticsManager.Event("myEvent", params).track();\n'})})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>c,x:()=>i});var t=n(6540);const r={},s=t.createContext(r);function c(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);
"use strict";(self.webpackChunkanalytics_sdk_extensions=self.webpackChunkanalytics_sdk_extensions||[]).push([[4685],{3210:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"sdks/analytics-sdks/ios/advanced-usage/ios-analytics-automatic-tracking","title":"Automatic Tracking","description":"Configure automatic tracking","source":"@site/docs/sdks/analytics-sdks/ios/advanced-usage/automatic-tracking.md","sourceDirName":"sdks/analytics-sdks/ios/advanced-usage","slug":"/analytics-sdk/ios/ios-automatic-tracking","permalink":"/rakuten-analytics-public-docs/docs/analytics-sdk/ios/ios-automatic-tracking","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"id":"ios-analytics-automatic-tracking","slug":"/analytics-sdk/ios/ios-automatic-tracking","title":"Automatic Tracking","added_version":"2.7.0","updated_version":"9.5.0","changelog":"./ios-changelog"},"sidebar":"docSidebar","previous":{"title":"IDFA Tracking","permalink":"/rakuten-analytics-public-docs/docs/analytics-sdk/ios/ios-idfa-tracking"},"next":{"title":"Duplicate Events for Multiple Accounts","permalink":"/rakuten-analytics-public-docs/docs/analytics-sdk/ios/ios-duplicate-events"}}');var a=e(4848),s=e(8453);const r={sidebar_position:4,id:"ios-analytics-automatic-tracking",slug:"/analytics-sdk/ios/ios-automatic-tracking",title:"Automatic Tracking",added_version:"2.7.0",updated_version:"9.5.0",changelog:"./ios-changelog"},c=void 0,o={},l=[{value:"Configure automatic tracking",id:"configure-automatic-tracking",level:2},{value:"Public API",id:"public-api",level:3},{value:"Automatics events tracking configuration",id:"automatics-events-tracking-configuration",level:3},{value:"Build time configuration",id:"build-time-configuration",level:4},{value:"Runtime configuration",id:"runtime-configuration",level:4}];function d(n){const i={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h2,{id:"configure-automatic-tracking",children:"Configure automatic tracking"}),"\n",(0,a.jsx)(i.h3,{id:"public-api",children:"Public API"}),"\n",(0,a.jsx)(i.p,{children:"If your app is coded in Objective-C, please import this header file in order to use our public Swift classes:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-objc",children:"#import <RakutenAnalytics/RAnalytics-Swift.h>\n"})}),"\n",(0,a.jsx)(i.p,{children:"If your app is coded in Swift, please import the RakutenAnalytics framework:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-swift",children:"import RakutenAnalytics\n"})}),"\n",(0,a.jsx)(i.h3,{id:"automatics-events-tracking-configuration",children:"Automatics events tracking configuration"}),"\n",(0,a.jsx)(i.h4,{id:"build-time-configuration",children:"Build time configuration"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Create and add this file to your Xcode project: ",(0,a.jsx)(i.code,{children:"RAnalyticsConfiguration.plist"})]}),"\n",(0,a.jsxs)(i.li,{children:["Open the file and add the events you do not want to track to a ",(0,a.jsx)(i.code,{children:"RATDisabledEventsList"})," string array. For example, to disable all the automatic events:"]}),"\n"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n    <key>RATDisabledEventsList</key>\n    <array>\n    <string>_rem_init_launch</string>\n    <string>_rem_launch</string>\n    <string>_rem_end_session</string>\n    <string>_rem_update</string>\n    <string>_rem_login</string>\n    <string>_rem_login_failure</string>\n    <string>_rem_logout</string>\n    <string>_rem_install</string>\n    <string>_rem_visit</string>\n    <string>_rem_applink</string>\n    <string>_rem_push_received</string>\n    <string>_rem_push_auto_register</string>\n    <string>_rem_push_auto_unregister</string>\n    <string>_rem_push_notify</string>\n    <string>_rem_sso_credential_found</string>\n    <string>_rem_login_credential_found</string>\n    <string>_rem_credential_strategies</string>\n    <string>_analytics_custom</string>\n    </array>\n</dict>\n</plist>\n'})}),"\n",(0,a.jsx)(i.h4,{id:"runtime-configuration",children:"Runtime configuration"}),"\n",(0,a.jsx)(i.p,{children:"It's also possible to enable or disable events at runtime:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Enable all events at runtime"}),"\n"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-swift",children:"AnalyticsManager.shared().shouldTrackEventHandler = { _ in true }\n"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Disable all events at runtime"}),"\n"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-swift",children:"AnalyticsManager.shared().shouldTrackEventHandler = { _ in false }\n"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Disable a given event at runtime"}),"\n"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-swift",children:"AnalyticsManager.shared().shouldTrackEventHandler = { eventName in\n    eventName != AnalyticsManager.Event.Name.sessionStart\n}\n"})}),"\n",(0,a.jsx)(i.p,{children:"Note: The runtime configuration overrides the build time configuration. If an event is disabled in the build time configuration and enabled in the runtime configuration the event will be tracked by RakutenAnalytics."}),"\n",(0,a.jsxs)(i.p,{children:["In order to override the build time configuration at runtime set ",(0,a.jsx)(i.code,{children:"AnalyticsManager.shared().shouldTrackEventHandler"})," in ",(0,a.jsx)(i.code,{children:"application(_:willFinishLaunchingWithOptions:)"}),":"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-swift",children:"@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n    func application(_ application: UIApplication, willFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {\n        AnalyticsManager.shared().shouldTrackEventHandler = { eventName in\n            ...\n        }\n        return true\n    }\n}\n"})})]})}function u(n={}){const{wrapper:i}={...(0,s.R)(),...n.components};return i?(0,a.jsx)(i,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,i,e)=>{e.d(i,{R:()=>r,x:()=>c});var t=e(6540);const a={},s=t.createContext(a);function r(n){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function c(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),t.createElement(s.Provider,{value:i},n.children)}}}]);